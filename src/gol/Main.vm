function Main.main 12
push constant 0
pop local 1
push constant 0
pop local 2
push constant 32
pop local 5
push constant 512
push local 5
call Math.divide 2
pop local 3
push constant 256
push local 5
call Math.divide 2
pop local 4
push local 3
call Array.new 1
pop local 8
push constant 0
pop local 6
call KB.init 0
pop temp 0
label WHILE_EXP0
push local 6
push local 3
push constant 1
sub
lt
not
if-goto WHILE_END0
push local 4
call Array.new 1
pop local 9
push constant 0
pop local 7
label WHILE_EXP1
push local 7
push local 4
push constant 1
sub
lt
not
if-goto WHILE_END1
push local 5
push constant 0
push constant 1
push constant 0
not
call Block.new 4
pop local 10
push local 7
push local 9
add
push local 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 10
push local 6
push local 7
call Block.draw 3
pop temp 0
push local 7
push constant 1
add
pop local 7
goto WHILE_EXP1
label WHILE_END1
push local 6
push local 8
add
push local 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 6
push constant 1
add
pop local 6
goto WHILE_EXP0
label WHILE_END0
push local 5
push constant 1
push constant 1
push constant 0
call Block.new 4
pop local 11
call Keyboard.keyPressed 0
pop local 0
push local 11
push local 1
push local 2
call Block.draw 3
pop temp 0
label WHILE_EXP2
push local 0
call KB.q 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push local 0
call KB.r_arr 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 11
push local 1
push local 2
call Block.clear 3
pop temp 0
push local 1
push constant 1
add
push local 3
push constant 2
sub
call Math.min 2
pop local 1
push local 11
push local 1
push local 2
call Block.draw 3
pop temp 0
label IF_FALSE0
push local 0
call KB.u_arr 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 11
push local 1
push local 2
call Block.clear 3
pop temp 0
push local 2
push constant 1
sub
push constant 0
call Math.max 2
pop local 2
push local 11
push local 1
push local 2
call Block.draw 3
pop temp 0
label IF_FALSE1
push local 0
call KB.l_arr 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 11
push local 1
push local 2
call Block.clear 3
pop temp 0
push local 1
push constant 1
sub
push constant 0
call Math.max 2
pop local 1
push local 11
push local 1
push local 2
call Block.draw 3
pop temp 0
label IF_FALSE2
push local 0
call KB.d_arr 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 11
push local 1
push local 2
call Block.clear 3
pop temp 0
push local 4
push constant 2
sub
push local 2
push constant 1
add
call Math.min 2
pop local 2
push local 11
push local 1
push local 2
call Block.draw 3
pop temp 0
label IF_FALSE3
push constant 100
call Sys.wait 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
